---
title: "class05: Data Viz with ggplot"
author: "Xiaoxuan Teng (PID:A69028742)"
date: 01/24/2024
format: pdf
---

# Graphics systems in R

There are many graphics systems for R. These include so-called *"base R"* and those in add-on packages like `ggplot2`.

```{r}
#cars
str(cars)
plot(cars)
```

How can we make this with `ggplot2`

This is an add-on package and I first need to install it on my computer. This install is a one time only deal.

To install any package I use the `install.packages()` function.

To use it we need to load up the package from our library of install packages. For this I use `library(ggplot2)`

```{r}
library(ggplot2)
ggplot(cars)
```

Using ggplot is not as straightforward as base R plot for basic plots. I have some more typing to do.

Every ggplot has at least 3 things (layers):

- **data** (data.frame)
- **aes** (how the data map to the plot)
- **geoms** (think of this as the type of plot, e.g. points, lines, etc.)

```{r}
ggplot(cars) +
  aes(x = speed, y = dist) +
  geom_point()

#ggplot(cars, aes(speed, dist, color = dist)) + 
#          geom_point()
```

Here ggplot was more verbose - i.e. I had more typing to do - than base R. However, I can add more layers to make nicer and more complicated plots in an easy way with ggplot.

```{r}
ggplot(cars) +
  aes(speed, dist) +
  geom_point() +
  geom_smooth() +
  labs(title = "Stopping Distance of Old Cars") +
  theme_bw()
```

```{r}
p <- ggplot(cars) +
  aes(speed, dist) +
  geom_point() +
  geom_smooth() +
  labs(title = "Stopping Distance of Old Cars")
```

```{r}
library(patchwork)

(p|p) /p
```

## Lab

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes, 2)
```

> Q. Use the nrow() function to find out how many genes are in this dataset. What is your answer? 
 
```{r}
nrow(genes)
```

> Q. Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find?

```{r}
ncol(genes)
```

> Q. Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer? 

```{r}
table(genes$State)
```

> Q. Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset? 

```{r}
round(table(genes$State) / nrow(genes) * 100, 2)
```

```{r}
library(ggplot2)
p <- ggplot(genes) + 
    aes(x=Condition1, y=Condition2, col=State, name=Gene) +
    geom_point()
p2 <- p + scale_color_manual( values=c("blue","gray","red") ) +
  labs(title="Gene Expresion Changes Upon Drug Treatment",
         x="Control (no drug) ",
         y="Drug Treatment")
p2
```

```{r}
#| message: false

library(plotly)
#ggplotly(p2)
```






